//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Windows;
using System.Windows.Media;
using System.Windows.Media.Effects;

namespace RzWpf {
	
	public class LightenEffect : ShaderEffect {
		public static readonly DependencyProperty InputProperty = ShaderEffect.RegisterPixelShaderSamplerProperty("Input", typeof(LightenEffect), 0);
		public static readonly DependencyProperty ColorProperty = DependencyProperty.Register("Color", typeof(Color), typeof(LightenEffect), new UIPropertyMetadata(Color.FromArgb(255, 0, 0, 0), PixelShaderConstantCallback(0)));
		public static readonly DependencyProperty IntensityProperty = DependencyProperty.Register("Intensity", typeof(double), typeof(LightenEffect), new UIPropertyMetadata(((double)(1D)), PixelShaderConstantCallback(1)));

		public LightenEffect() {
			PixelShader pixelShader = new PixelShader();
			pixelShader.UriSource = new Uri("/RzWpf;component/Shaders/LightenEffect.ps", UriKind.Relative);
			this.PixelShader = pixelShader;

			this.UpdateShaderValue(InputProperty);
			this.UpdateShaderValue(ColorProperty);
			this.UpdateShaderValue(IntensityProperty);
		}

		public Brush Input 
        {
			get { return ((Brush)(this.GetValue(InputProperty))); }
			set { this.SetValue(InputProperty, value); }
		}

		public Color Color 
        {
			get { return ((Color)(this.GetValue(ColorProperty))); }
			set { this.SetValue(ColorProperty, value); }
		}

		public double Intensity 
        {
			get { return ((double)(this.GetValue(IntensityProperty))); }
			set { this.SetValue(IntensityProperty, value); }
		}
	}
}
